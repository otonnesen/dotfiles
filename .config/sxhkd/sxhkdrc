# Reload sxhkd conf
super + Escape
	pkill -USR1 -x sxhkd

## Program binds
super + Return
	$TERMINAL
super + d
	dmenu_run
super + c
	$TERMINAL -e calcurse -D $CALCURSE_DEFAULT_DIR
super + w
	$BROWSER
super + shift + y
	lock
super + b
	selectbg
super + shift + s
    flameshot gui
super + p
    firefox --new-window "about:logins"


## bspwm binds
super + shift + Escape
	prompt "Close Xorg?" "bspc quit"
super + alt + shift + q
	bspc node -{c,k}
# Toggle floating
super + shift + @space
	bspc node -t \~floating
# Toggle floating focused
super + @space
	if [ -z $(bspc query -N -n focused.floating) ];\
		then bspc node -f newest.local.floating;\
		else bspc node -f newest.local.\!floating;\
	fi
# Swap with biggest node
super + g
	bspc node -s biggest.local
# Toggle fullscreen
super + f
	bspc node -t \~fullscreen
# Toggle monocle
super + m
	bspc desktop -l next
# Toggle scratchpad
super + u
	id=$(cat /tmp/scratchid);\
	if [ -z $id ];\
		then launch_scratchpad;\
		else (bspc node $id --flag hidden; bspc node -f $id);\
	fi
# Reset scratchpad (useful when launching X twice ends up in corrupt
# /tmp/scratchid file)
super + shift + u
    bspc query --nodes \
    | xargs -I'{}' bspc query -T -n {} \
    | jq 'if .client.className == "scratchpad" then .id else empty end' \
    | xargs -I'{}' bspc node {} -k \
    && : > /tmp/scratchid
# If floating, move window, if tiled focus node in given direction
super + {_,shift + }{h,j,k,l}
	handle_movement {f,s} {west,south,north,east} $(bspc query -N -n)
# Focus or send to given desktop
super + {_,shift + }{1-9,0}
	handle_desktop {desktop -f,node -d} '^{1-9,10}' $(bspc query -N -n)
# Focus the next/previous desktop
super + {_,shift + }bracket{left,right}
	bspc {desktop -f,node -d} {prev,next}.local
# Focus or send to left/right monitor
super + ctrl {_,shift + }{h,l}
	handle_monitor {monitor -f,node -m} {west,east} $(bspc query -N -n)
# Focus the older or newer node in the focus history
super + {o,i}
	bspc wm -h off; \
	bspc node {older,newer} -f; \
	bspc wm -h on
# Expand window
super + alt + {h,j,k,l}
	bspc node -z {left -20 0,bottom 0 20,top 0 -20,right 20 0}
# Retract gaps
super + minus
	let a=$(bspc config window_gap)+12; bspc config window_gap $a
# Expand gaps
super + plus
	let a=$(bspc config window_gap)-12; if (( a < 0 )); then a=0; fi; bspc config window_gap $a
# Reset gaps
super + equal
	bspc config window_gap 24
# Contract window
super + alt + shift + {h,j,k,l}
	bspc node -z {right -20 0,top 0 20,bottom 0 -20,left 20 0}

# Media keys
super + s
	$TERMINAL -e alsamixer
XF86AudioMute
	amixer sset Master toggle
XF86AudioMicMute
    amixer sset Capture toggle
XF86Audio{Raise,Lower}Volume
	amixer sset Master 5%{+,-}

# Brightness
XF86MonBrightness{Down,Up}
	xbacklight -{dec,inc} 5
